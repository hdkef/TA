//Library
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);  //sometimes the adress is not 0x27. Change to 0x3f if it dosn't work.
#include <neotimer.h>

//konstanta
const int LSH_INPUT_PIN = 22;
const int LSL_INPUT_PIN = 23;
const int LSH_OUTPUT_PIN = 37;
const int LSL_OUTPUT_PIN = 36;
const int KOMP_PIN = 33;
const int SOLENOID_NAOH_PIN = 35;
const int SOLENOID_CO2_PIN = 34;
const int FILL_TIME = 25000;
const int SCRUB_TIME = 120000;
const int PB_FILL_PIN = 52;
const int PB_STOP_PIN = 53;
const int PB_SCRUB_PIN = 51;
const int MAX_HOLD = 500;

//variabel
int fill_hold = 0;
int scrub_hold = 0;
bool scrub = false;
bool fill = false;
bool solenoid_co2_status = false;
bool solenoid_naoh_status = false;
bool lsh_status = true;
bool lsl_status = false;
bool scrub_timer = false; //status timer scrub 
bool fill_timer = false; //status timer fill
bool pb2_press = false; //tombol stop agar tidak terinput dobel

//kelas
Neotimer fillTimer = Neotimer(FILL_TIME);
Neotimer scrubTimer = Neotimer(SCRUB_TIME);

void setup() {
  Serial.begin(9600);
  // put your setup code here, to run once:
  pinMode(LSL_INPUT_PIN,INPUT);
  pinMode(LSH_INPUT_PIN,INPUT);
  pinMode(PB_FILL_PIN,INPUT);
  pinMode(PB_SCRUB_PIN,INPUT);
  pinMode(PB_STOP_PIN,INPUT);
  pinMode(LSL_OUTPUT_PIN,OUTPUT);
  pinMode(LSH_OUTPUT_PIN,OUTPUT); 
  pinMode(KOMP_PIN,OUTPUT); //normally closed dan activate low, HIGH maka kontak tertutup
  pinMode(SOLENOID_NAOH_PIN,OUTPUT);
  pinMode(SOLENOID_CO2_PIN,OUTPUT);
  digitalWrite(SOLENOID_NAOH_PIN,HIGH); //relay activate low agar awal2 open maka high
  digitalWrite(SOLENOID_CO2_PIN,HIGH); //relay activate low agar awal2 open maka high
  digitalWrite(KOMP_PIN,HIGH); //relay activate low agar awal2 closed maka high
  digitalWrite(LSL_OUTPUT_PIN, HIGH); //relay activate low agar awal2 open maka high
  digitalWrite(LSH_OUTPUT_PIN, HIGH); //relay activate low agar awal2 open maka high

  PCICR |= (1 << PCIE0);    //enable PCMSK0 scan                                                 
  PCMSK0 |= (1 << PCINT0);  //Set pin 53 atau pb stop

  lcd.begin();
  lcd.backlight();
  lcd.clear();
  lcd.print("reactor status");

  delay(500);
}

void stopNow(){
  digitalWrite(SOLENOID_NAOH_PIN,HIGH); //tutup solenoid naoh, relay activate low
  digitalWrite(SOLENOID_CO2_PIN,HIGH); //tutup solenoid co2, relay activate low
  digitalWrite(KOMP_PIN,LOW); //matikan kompressor, relay activate low normally close
  fill = false;
  fill_timer = false;
  scrub = false;
  scrub_timer = false;
  solenoid_co2_status = false;
  solenoid_naoh_status = false;
  fill_hold = 0;
  scrub_hold = 0;
}

void loop() {
  // put your main code here, to run repeatedly:
  //  jika posisi air di atas lsh maka kontak terbuka LOW
  if (digitalRead(LSH_INPUT_PIN) == LOW && lsh_status == true){
    digitalWrite(LSH_OUTPUT_PIN, LOW); //relay activate low
    Serial.println("lampu lsh nyala");
    lsh_status = false;
  }
////
////  // jika posisi air di bawah lsh maka kontak tertutup HIGH
  if (digitalRead(LSH_INPUT_PIN) == HIGH && lsh_status == false){
    digitalWrite(LSH_OUTPUT_PIN, HIGH); //relay activate low sehingga untuk non aktif high
    Serial.println("lampu lsh mati");
    lsh_status = true;
  }
////
////  //jika posisi lsl di bawah maka posisi kontak terbuka maka LOW
  if (digitalRead(LSL_INPUT_PIN) == LOW && lsl_status == true){
    digitalWrite(LSL_OUTPUT_PIN, HIGH); //relay activate low sehingga untuk non aktif high
    Serial.println("lampu lsl mati");
    lsl_status = false;
  }
////
////  //jika posisi lsl di atas maka posisi kontak tertutup maka HIGH
  if (digitalRead(LSL_INPUT_PIN) == HIGH && lsl_status == false) {
    digitalWrite(LSL_OUTPUT_PIN, LOW); //relay activate low sehingga untuk aktif low
    Serial.println("lampu lsl nyala");
    lsl_status = true;
  }

  //jia tombol fill HIGH dan fill hold < 500 dan fill timer false maka fill hold++ dan delay 1 ms jika fill hold == max hold maka fill == true
  if (digitalRead(PB_FILL_PIN) == HIGH && fill_hold < MAX_HOLD){
    if (fill_timer == false){
      fill_hold+= 1;
      delay(1);
    }
  }else if (digitalRead(PB_FILL_PIN) == HIGH && fill_hold == MAX_HOLD){
    fill = true;
  }else{
    fill_hold = 0; //if no high after some delay,, reset
  }

  //jia tombol scrbu HIGH dan scrub hold < 500 dan scrub timer false maka scrub hold++ dan delay 1 ms jika scrub hold == max hold maka scrub == true
  if (digitalRead(PB_SCRUB_PIN) == HIGH && scrub_hold < MAX_HOLD){
    if (scrub_timer == false){
      scrub_hold+= 1;
      delay(1);
    }
  }else if (digitalRead(PB_SCRUB_PIN) == HIGH && scrub_hold == MAX_HOLD){
    scrub = true;
  }else{
    scrub_hold = 0; //if no high after some delay,, reset
  }


  if (fill == false && scrub == false){
    return 0; //jika tombol fill dan scrub tidak ditekan
    //kode ke bawah tidak usah dibaca
  }

  if (fill == true && solenoid_naoh_status == false){ //jika tombol fill ditekan
    fillTimer.start();
    digitalWrite(SOLENOID_NAOH_PIN,LOW);//solenoid naoh dibuka, relay activate low
    fill_timer = true;
    solenoid_naoh_status = true;
    lcd.setCursor(0,0);
    lcd.print("start filling");
  }

  if (solenoid_naoh_status == true && fill_timer == true){  //jika solenoid naoh telah terbuka
    if (fillTimer.done() || lsh_status == false){ //jika timer habis atau posisi air di atas lsh
      digitalWrite(SOLENOID_NAOH_PIN,HIGH); //solenoid naoh ditutup, relay activate low
      fill_timer = false;
      solenoid_naoh_status = false;
      lcd.setCursor(0,0);
      lcd.print("filling done");
      fill = false;
      fill_hold = false;
    }
  }

  if (scrub == true && solenoid_co2_status == false){ //jika tombol scrub ditekan
    if (lsl_status == true){ //jika terdapat naoh atau lsl_status == true
      digitalWrite(KOMP_PIN,HIGH); //kompressor nyala, normally close relay activate low
      digitalWrite(SOLENOID_CO2_PIN,LOW);//solenoid co2 dibuka, relay activate low
      scrub_timer = true;
      solenoid_co2_status = true;
      scrubTimer.start();
      lcd.setCursor(0,0);
      lcd.print("start scrubbing");
    }
  }
if (solenoid_co2_status == true && scrub_timer == true){  //jika solenoid naoh telah terbuka
    if (scrubTimer.done()){ //jika timer habis atau posisi air di atas lsh
      digitalWrite(SOLENOID_CO2_PIN,HIGH); //solenoid co2 ditutup, relay activate low
      digitalWrite(KOMP_PIN,LOW); //kompressor dimatikan, normally close relay activate low
      scrub_timer = false;
      solenoid_co2_status = false;
      lcd.setCursor(0,0);
      lcd.print("scrubbing done");
      scrub = false;
      scrub_hold = 0;
    }
  }
}

ISR(PCINT0_vect){
  ///////////////////////////////////////Input from optocoupler
  if (PINB & B00000001){
    if (!pb2_press){
      stopNow(); //jika tombol stop pb2 ditekan, jalankan fungsi stopNow
      pb2_press = true;
    }
  }
  else if (pb2_press){
      pb2_press = false;
    }
}
